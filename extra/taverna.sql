-- MySQL Script generated by MySQL Workbench
-- Mon Jul 29 18:05:15 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema taverna
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `taverna` ;

-- -----------------------------------------------------
-- Schema taverna
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `taverna` DEFAULT CHARACTER SET utf8 ;
USE `taverna` ;

-- -----------------------------------------------------
-- Table `taverna`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taverna`.`usuario` ;

CREATE TABLE IF NOT EXISTS `taverna`.`usuario` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'nenhuma chave natural que nao seja texto',
  `nome` VARCHAR(15) NOT NULL,
  `login` VARCHAR(40) NOT NULL COMMENT 'não necessariamente um email',
  `senha` VARCHAR(20) NOT NULL COMMENT 'talvez tenha que mudar o tamanho em caso de criptografia no futuro',
  `endereco` JSON NOT NULL COMMENT 'como json por hora, talvez vire uma tabela a parte futuramente',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taverna`.`interesse`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taverna`.`interesse` ;

CREATE TABLE IF NOT EXISTS `taverna`.`interesse` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `interesse` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taverna`.`amizade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taverna`.`amizade` ;

CREATE TABLE IF NOT EXISTS `taverna`.`amizade` (
  `id_usuario1` INT NOT NULL COMMENT 'usuario1 é quem convidou.',
  `id_usuario2` INT NOT NULL COMMENT 'usuario2 é quem recebeu o convite.',
  `aceita` BIT NULL DEFAULT b'0' COMMENT 'aceita: 0 se ainda não aceitou e 1 se já aceitou.\nem caso de rejeitar a amizade a mesma deve ser removida.',
  PRIMARY KEY (`id_usuario1`, `id_usuario2`),
  INDEX `fk_usuario2_idx` (`id_usuario2` ASC) VISIBLE,
  CONSTRAINT `fk_usuario1`
    FOREIGN KEY (`id_usuario1`)
    REFERENCES `taverna`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario2`
    FOREIGN KEY (`id_usuario2`)
    REFERENCES `taverna`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taverna`.`evento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taverna`.`evento` ;

CREATE TABLE IF NOT EXISTS `taverna`.`evento` (
  `id_organizador` INT NOT NULL COMMENT 'responsável pelo evento',
  `id_jogo` INT NOT NULL COMMENT 'jogo (ou outra coisa) foco do evento. Deve se enquadrar nos interesses dos usuarios',
  `nome` VARCHAR(45) NOT NULL COMMENT 'nome do evento',
  `data` DATETIME NOT NULL COMMENT 'quando o evento acontecerá',
  `inscricao` FLOAT NULL DEFAULT 0.00 COMMENT 'valor para se inscrever, null deve ser tratado como 0.00',
  `endereco` JSON NOT NULL COMMENT 'json por hora, talvez vire uma tabela no futuro',
  `presencial` BIT NULL DEFAULT b'0',
  PRIMARY KEY (`id_organizador`, `id_jogo`, `data`),
  INDEX `fk_jogo_idx` (`id_jogo` ASC) VISIBLE,
  CONSTRAINT `fk_organizador`
    FOREIGN KEY (`id_organizador`)
    REFERENCES `taverna`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_jogo`
    FOREIGN KEY (`id_jogo`)
    REFERENCES `taverna`.`interesse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taverna`.`mensagem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taverna`.`mensagem` ;

CREATE TABLE IF NOT EXISTS `taverna`.`mensagem` (
  `id_remetente` INT NOT NULL COMMENT 'quem enviou a mensagem',
  `id_destinatario` INT NOT NULL COMMENT 'quem recebeu a mensagem',
  `conteudo` TINYTEXT NOT NULL COMMENT 'conteudo da mensagem',
  `data` DATETIME NOT NULL COMMENT 'data de envio da mensagem',
  PRIMARY KEY (`id_remetente`, `id_destinatario`),
  INDEX `fk_destinatario_idx` (`id_destinatario` ASC) VISIBLE,
  CONSTRAINT `fk_remetente`
    FOREIGN KEY (`id_remetente`)
    REFERENCES `taverna`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_destinatario`
    FOREIGN KEY (`id_destinatario`)
    REFERENCES `taverna`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taverna`.`interesses_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taverna`.`interesses_usuario` ;

CREATE TABLE IF NOT EXISTS `taverna`.`interesses_usuario` (
  `id_usuario` INT NOT NULL,
  `id_interesse` INT NOT NULL,
  PRIMARY KEY (`id_usuario`, `id_interesse`),
  INDEX `fk_interesse_idx` (`id_interesse` ASC) VISIBLE,
  CONSTRAINT `fk_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `taverna`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interesse`
    FOREIGN KEY (`id_interesse`)
    REFERENCES `taverna`.`interesse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Tables for session
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taverna`.`SPRING_SESSION` ;

CREATE TABLE IF NOT EXISTS `SPRING_SESSION` (
  `PRIMARY_ID` char(36) NOT NULL,
  `SESSION_ID` char(36) NOT NULL,
  `CREATION_TIME` bigint NOT NULL,
  `LAST_ACCESS_TIME` bigint NOT NULL,
  `MAX_INACTIVE_INTERVAL` int NOT NULL,
  `EXPIRY_TIME` bigint NOT NULL,
  `PRINCIPAL_NAME` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`PRIMARY_ID`),
  UNIQUE KEY `SPRING_SESSION_IX1` (`SESSION_ID`),
  KEY `SPRING_SESSION_IX2` (`EXPIRY_TIME`),
  KEY `SPRING_SESSION_IX3` (`PRINCIPAL_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC;

DROP TABLE IF EXISTS `taverna`.`SPRING_SESSION_ATTRIBUTES` ;

CREATE TABLE IF NOT EXISTS `SPRING_SESSION_ATTRIBUTES` (
  `SESSION_PRIMARY_ID` char(36) NOT NULL,
  `ATTRIBUTE_NAME` varchar(200) NOT NULL,
  `ATTRIBUTE_BYTES` blob NOT NULL,
  PRIMARY KEY (`SESSION_PRIMARY_ID`,`ATTRIBUTE_NAME`),
  CONSTRAINT `SPRING_SESSION_ATTRIBUTES_FK` FOREIGN KEY (`SESSION_PRIMARY_ID`) REFERENCES `SPRING_SESSION` (`PRIMARY_ID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
